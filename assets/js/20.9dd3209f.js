(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{530:function(v,_,l){"use strict";l.r(_);var e=l(2),a=Object(e.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("Boxx"),v._v(" "),l("h2",{attrs:{id:"前言背景"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#前言背景"}},[v._v("#")]),v._v(" 前言背景")]),v._v(" "),l("p",[v._v("由于业务需求的快速迭代，时间紧任务重，且项目由多个同学陆续参与，前期没有较好的统一规范，导致代码有大量重复，小程序代码包的体积蹭蹭在不断增大。从mp后台页面打开时间统计也可以看到时间有明显的提升。对于点餐用户来讲，这个打开时间已经对一部分的敏感用户有明显的体验影响了。至此我认为已经到了必须去解决的地步了。")]),v._v(" "),l("h2",{attrs:{id:"问题探讨-解决方案"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#问题探讨-解决方案"}},[v._v("#")]),v._v(" 问题探讨/解决方案")]),v._v(" "),l("p",[v._v("在小程序启动时，微信会在背后完成几项工作：下载小程序代码包、加载小程序代码包、初始化小程序首页。初始化小程序环境是微信环境做的工作,我们只需要控制代码包大小，和通过一些相关的缓存策略控制，和资源控制，逻辑控制，分包加载控制来进行启动加载优化。借助开发者工具"),l("code",[v._v("Audits")]),v._v("能力，大致有以下几个方面需要去优化改进。")]),v._v(" "),l("p",[l("img",{attrs:{src:"https://cyi113.oss-cn-shanghai.aliyuncs.com/wechat/wechat-start.png",alt:""}})]),v._v(" "),l("p",[v._v("1.避免过大的WXML节点数目。")]),v._v(" "),l("ul",[l("li",[v._v("建议一个"),l("code",[v._v("page")]),v._v("使用少于"),l("code",[v._v("1000")]),v._v("个WXML节点，节点🌲深度少于30层，子节点数不大于"),l("code",[v._v("60")]),v._v("个。太大的WXML节点🌲会增加内存的使用，样式重排时间也会更长。")]),v._v(" "),l("li",[v._v("目前优化方式:\n"),l("ul",[l("li",[v._v("精简代码，去掉不必要的WXML结构和未使用的WXSS定义。")]),v._v(" "),l("li",[v._v("统计项目中相似度高的业务功能，与负责UI输出的同事讨论UI设计风格统一问题。")]),v._v(" "),l("li",[v._v("抽离相似度高的业务组件封装为公共组件。自定义组件的更新只在组件内部进行，不受页面部分内容的复杂性的影响。")]),v._v(" "),l("li",[v._v("抽离通用样式。")]),v._v(" "),l("li",[v._v("根据mp后台页面访问数统计，页面入口等分析。使用分包加载，剥离部分业务功能为多个"),l("a",{attrs:{href:"https://developers.weixin.qq.com/miniprogram/dev/framework/subpackages.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("分包"),l("OutboundLink")],1),v._v("。")]),v._v(" "),l("li",[v._v("勾选开发者工具中，上传时压缩代码（若采用wepy高级版本，自带压缩，请按官网文档采取点击）。")]),v._v(" "),l("li",[v._v("避免白屏，先展示基础内容，使用骨架屏或简单的交互动画等。通过"),l("code",[v._v("document.head")]),v._v("查看首页都加载了哪些js。")])])])]),v._v(" "),l("p",[v._v("2.避免执行的脚本耗时过长的情况")]),v._v(" "),l("ul",[l("li",[v._v("执行脚本的耗时过长会让用户觉得卡顿，体验较差。")]),v._v(" "),l("li",[v._v("目前优化方式:\n"),l("ul",[l("li",[v._v("检查较复杂相关功能实现，优化部分逻辑。")]),v._v(" "),l("li",[v._v("检查定时器是否即时回收。因为定时器是全局的，并不会绑定在某个页面。")])])])]),v._v(" "),l("p",[v._v("3.图片资源控制")]),v._v(" "),l("ul",[l("li",[v._v("目前优化方式:\n"),l("ul",[l("li",[v._v("压缩图片，使用适当的图片格式，减少本地图片数量，静态图片存储于CDN。访问使用懒加载的方式。")]),v._v(" "),l("li",[v._v("实现通用方法，根据不同的图片展示大小，动态配置请求CDN的裁剪参数。提升加载速度，减小CDN访问流量。")]),v._v(" "),l("li",[v._v("开启缓存。")])])])]),v._v(" "),l("p",[v._v("4.对网络请求做必要的缓存以避免多余的请求")]),v._v(" "),l("ul",[l("li",[v._v("目前优化方式:\n"),l("ul",[l("li",[v._v("提前做异步请求，页面最好在onLoad时异步请求数据，不要在onReady时请求。")]),v._v(" "),l("li",[v._v("简单实现，在"),l("code",[v._v("globalData")]),v._v("里设置"),l("code",[v._v("flag")]),v._v("，根据"),l("code",[v._v("flag")]),v._v("状态决定是否发送请求。")]),v._v(" "),l("li",[v._v("减少部分页面的并发请求数，与后端同学讨论合并某些接口的可行性。同时我们也在探索GraphQL。")]),v._v(" "),l("li",[v._v("TODO: 后续实现请求发送统一管理，离开页面后"),l("code",[v._v("pending")]),v._v("状态请求"),l("code",[v._v("abort")]),v._v("。")])])])]),v._v(" "),l("p",[v._v("5.所有请求不应耗时太久")]),v._v(" "),l("ul",[l("li",[v._v("目前优化方式:\n"),l("ul",[l("li",[v._v("与后端同学讨论，裁剪部分无用字段返回。减少请求报文体积。")]),v._v(" "),l("li",[v._v("对于qps较高导致请求耗时较久的接口，前端做好用户等待交互，缓解用户等待焦虑。")]),v._v(" "),l("li",[v._v("后端同学对数据库索引优化。")])])])]),v._v(" "),l("p",[v._v("6.避免短时间内发起太多的请求")]),v._v(" "),l("ul",[l("li",[v._v("短时间内发起太多请求会触发小程序并行请求数量的限制，同时太多请求也可能导致加载慢等问题，应合理控制请求数量。")])]),v._v(" "),l("p",[v._v("7.避免频繁调用"),l("code",[v._v("setData")])]),v._v(" "),l("ul",[l("li",[v._v("setData接口的调用涉及逻辑层与渲染层间的线程通信，通信过于频繁可能导致处理队列阻塞，界面渲染不及时而导致卡顿，应避免无用的频繁调用。")]),v._v(" "),l("li",[v._v("原由: 小程序的视图层目前使用 WebView 作为渲染载体，而逻辑层是由独立的 JavascriptCore 作为运行环境。在架构上，WebView 和 JavascriptCore 都是独立的模块，并不具备数据直接共享的通道。当前，视图层和逻辑层的数据传输，实际上通过两边提供的 evaluateJavascript 所实现。即用户传输的数据，需要将其转换为字符串形式传递，同时把转换后的数据内容拼接成一份 JS 脚本，再通过执行 JS 脚本的形式传递到两边独立环境。而 evaluateJavascript 的执行会受很多方面的影响，数据到达视图层并不是实时的。")]),v._v(" "),l("li",[v._v("目前优化方式:\n"),l("ul",[l("li",[v._v("减少页面未用到字段的调用。")]),v._v(" "),l("li",[v._v("合并需要操作的数据后调用。")]),v._v(" "),l("li",[v._v("使用"),l("code",[v._v("setData")]),v._v("的特殊"),l("code",[v._v("key")]),v._v("实现局部更新")]),v._v(" "),l("li",[v._v("页面未使用的字段可以"),l("code",[v._v("this._myData=xxx")]),v._v("来更新")])])])]),v._v(" "),l("p",[v._v("8.避免"),l("code",[v._v("setData")]),v._v("的数据过大")]),v._v(" "),l("ul",[l("li",[v._v("目前优化方式:\n"),l("ul",[l("li",[v._v("列表数据分片"),l("code",[v._v("setData")]),v._v("。")]),v._v(" "),l("li",[v._v("对于无用字段先过滤后"),l("code",[v._v("setData")]),v._v("。")])])])]),v._v(" "),l("p",[v._v("9.避免出现任何"),l("code",[v._v("JavaScript")]),v._v("异常")]),v._v(" "),l("ul",[l("li",[v._v("出现 JavaScript 异常可能导致小程序的交互无法进行下去，我们应当追求零异常，保证小程序的高鲁棒性和高可用性。")]),v._v(" "),l("li",[v._v("不使用废弃接口。使用即将废弃或已废弃接口，可能导致小程序运行不正常。一般而言，接口不会立即去掉，但保险起见，建议不要使用，避免后续小程序突然运行异常。")]),v._v(" "),l("li",[v._v("页面跳转要做一下限制，如果页面快速点击会出现跳转多次的情况。")])]),v._v(" "),l("p",[v._v("10.滚动区域")]),v._v(" "),l("ul",[l("li",[v._v("在页面频繁滚动触发回调函数，会导致页面卡顿，这时必须和防抖动函数或者节流函数相结合做一些处理。")]),v._v(" "),l("li",[v._v("开启惯性滚动以增强体验.惯性滚动会使滚动比较顺畅，在安卓下默认有惯性滚动，而在 iOS 下需要额外设置"),l("code",[v._v("-webkit-overflow-scrolling: touch")]),v._v("。")])]),v._v(" "),l("h2",{attrs:{id:"end"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#end"}},[v._v("#")]),v._v(" END")])],1)}),[],!1,null,null,null);_.default=a.exports}}]);